{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","redux/contactSlice.js","redux/filterSlice.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","contactSlice","createSlice","name","initialState","id","number","reducers","addContact","reducer","state","action","push","payload","prepare","uuidv4","deleteContact","filter","contact","actions","contactsReducer","filterSlice","updateFilter","filterReducer","persistConfig","key","storage","whiteList","rootReducer","combineReducers","contacts","persistReducerContacts","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","getContacts","getFilter","ContactForm","useSelector","dispatch","useDispatch","className","styles","form","onSubmit","event","preventDefault","target","value","find","toLowerCase","alert","type","required","ContactList","filteredContacts","normalizedFilter","includes","getFilteredContacts","list","map","onClick","Filter","label","onChange","App","container","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.50a69572.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","import {createSlice} from '@reduxjs/toolkit';\nimport {v4 as uuidv4} from \"uuid\";\n\n\nconst contactSlice = createSlice({\n    name: 'contacts',\n    initialState: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n    ],\n    reducers: {\n        addContact: {\n            reducer(state, action) {\n                state.push(action.payload)\n            },\n            prepare({name, number}) {\n                return {\n                    payload: {\n                        name, number,\n                        id: uuidv4()\n                    }\n                }\n            }\n        },\n        deleteContact: (state, action) => {\n            return state.filter(\n                (contact) => contact.id !== action.payload\n            );\n        }\n    },\n});\n\nexport const {addContact, deleteContact} = contactSlice.actions;\n\nexport const contactsReducer = contactSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState: '',\n    reducers: {\n        updateFilter: (state, action) => {\n            return action.payload;\n        },\n    },\n});\n\nexport const {updateFilter} = filterSlice.actions;\n\nexport const filterReducer = filterSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport {contactsReducer} from './contactSlice';\nimport {filterReducer} from \"./filterSlice\";\nimport storage from 'redux-persist/lib/storage'\nimport {FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE} from 'redux-persist'\nimport {combineReducers} from \"redux\";\n\nconst persistConfig = {\n    key: 'root1',\n    storage,\n    whiteList: ['contacts']\n}\n\nconst rootReducer = combineReducers({\n    filter: filterReducer, contacts: contactsReducer\n})\n\nconst persistReducerContacts = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n    reducer: persistReducerContacts,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }),\n});\n\nexport const persistor = persistStore(store);\n","export const getContacts = (state) => state.contacts;\nexport const getFilter = (state) => state.filter;\n\n","import React from 'react';\nimport styles from './ContactForm.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContacts} from \"../../redux/selectors\";\nimport {addContact} from \"../../redux/contactSlice\";\n\nconst ContactForm = () => {\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const name = event.target[0].value;\n        const number = event.target[1].value;\n        const existingContact = contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase());\n        if (existingContact) {\n            alert(`${name} is already in contacts.`);\n        } else {\n            dispatch(addContact({name, number}));\n            event.target[0].value = '';\n            event.target[1].value = '';\n\n        }\n    };\n\n    return (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            <label>\n                Name:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    required\n                />\n            </label>\n            <label>\n                Number:\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    required\n                />\n            </label>\n            <button type=\"submit\">Add contact</button>\n        </form>\n    );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContacts, getFilter} from \"../../redux/selectors\";\nimport {deleteContact} from \"../../redux/contactSlice\";\n\nconst getFilteredContacts = (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst ContactList = () => {\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n    const filteredContacts = getFilteredContacts(filter, contacts);\n\n    return (\n        <ul className={styles.list}>\n            {filteredContacts.map((contact) => (\n                <li key={contact.id}>\n                    {contact.name}: {contact.number}\n                    <button type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}>\n                        Delete\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFilter} from \"../../redux/selectors\";\nimport {updateFilter} from \"../../redux/filterSlice\";\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n    const onChangeFilter = (value) => {\n        dispatch(updateFilter(value))\n    }\n    return (\n        <label className={styles.label}>\n            Find contacts by name:\n            <input type=\"text\" value={filter} onChange={(event) => onChangeFilter(event.target.value)}/>\n        </label>\n    );\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport styles from './App.module.css';\n\nconst App = () => {\n    return (\n        <div className={styles.container}>\n            <h1>Phonebook</h1>\n            <ContactForm/>\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactList/>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n    <PersistGate loading={null} persistor={persistor}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </PersistGate>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}